(define (domain infant-p30)

	(:requirements :equality :typing :probabilistic-effects :disjunctive-preconditions)

	(:types None)

	(:predicates
		(has-bubbles ?x - None)
		; Only one of the following three can be true at a time
		;(child-moving-away) ;commenting out because redudant with (not (child-moving-toward)). Must change both always, or only have one.
		(child-moving-toward ?x - None)
		;(child-stationary ?x - None) ; commenting out because contradictions happen in statelist, constraints not set up to fix easily
		; Only one of the following three can be true at a time
		;(direct-social-interaction ?x - None) ; constradicts with social-interaction in statelist (same for solitary play)
		(social-interaction ?x - None) ; simplifying to either be in social interaction or not
		;(solitary-play ?x - None)
	)

	; (:constraints
	; 	(and
 ;            (forall (?loc - cell) (at-most-once (robot-at ?loc)))
 ;        )
	; )

	(:action spin

		:parameters (?x - None)
		:precondition (social-interaction ?x) ;(or (direct-social-interaction) (social-interaction) (solitary-play))
		:effect (probabilistic 0.7 (and (child-moving-toward ?x) (not (child-stationary ?x)) (increase reward 2)) ; child moving toward
							   0.15 (and (not (child-moving-toward ?x)) (child-stationary ?x) (increase reward -2)) ; child stationary
						       0.15 (and (not (child-moving-toward ?x)) (not (child-stationary ?x)) (increase reward -2)) ; child moving away
				)
	)

	(:action move-toward
		:parameters (?x - None)
		:precondition (and (not (direct-social-interaction ?x)) (child-stationary ?x))
		:effect (probabilistic 0.7 (and (child-moving-toward ?x) (not (child-stationary ?x)) (increase reward 2)) ; child moving toward
							   0.15 (and (not (child-moving-toward ?x)) (child-stationary ?x) (increase reward -2)) ; child stationary
							   0.15 (and (not (child-moving-toward ?x)) (not (child-stationary ?x)) (increase reward -2)) ; child moving away
				)
			
	)

	(:action move-away
		:parameters (?x - None)
		:precondition (direct-social-interaction ?x) ;(or (direct-social-interaction) (social-interaction) (solitary-play))
		:effect (probabilistic 0.7 (and (child-moving-toward ?x) (not (child-stationary ?x)) (increase reward 2)) ; child moving toward
							   0.15 (and (not (child-moving-toward ?x)) (child-stationary ?x) (increase reward -2)) ; child stationary
							   0.15 (and (not (child-moving-toward ?x)) (not (child-stationary ?x)) (increase reward -2)) ; child moving away
				)
			
	)

	(:action blow-bubbles
		:parameters (?x - None)
		:precondition (and (direct-social-interaction ?x) (has-bubbles ?x))
		:effect (probabilistic 0.7 (and (child-moving-toward ?x) (not (child-stationary ?x)) (increase reward 2)) ; child moving toward
							   0.15 (and (not (child-moving-toward ?x)) (child-stationary ?x) (increase reward -2)) ; child stationary
							   0.15 (and (not (child-moving-toward ?x)) (not (child-stationary ?x)) (increase reward -2)) ; child moving away
				)
	)

	(:action refill-bubbles
		:parameters (?x - None)
		:precondition (not (has-bubbles ?x))
		:effect (has-bubbles ?x)
	)

	(:action play-sounds
		:parameters (?x - None)
		:precondition (child-stationary ?x);(or (child-moving-toward) (child-stationary))
		:effect (probabilistic 0.7 (and (child-moving-toward ?x) (not (child-stationary ?x)) ( increase reward 2)) ; child moving toward
							   0.15 (and (not (child-moving-toward ?x)) (child-stationary ?x) (increase reward -2)) ; child stationary
							   0.15 (and (not (child-moving-toward ?x)) (not (child-stationary ?x)) (increase reward -2)) ; child moving away
				)
	)

	(:action lights-and-sounds
		:parameters (?x - None)
		:precondition (solitary-play ?x) ;(or (direct-social-interaction) (social-interaction) (solitary-play))
		:effect (probabilistic 0.7 (and (child-moving-toward ?x) (not (child-stationary ?x)) ( increase reward 2)) ; child moving toward
							   0.15 (and (not (child-moving-toward ?x)) (child-stationary ?x) (increase reward -2)) ; child stationary
							   0.15 (and (not (child-moving-toward ?x)) (not (child-stationary ?x)) (increase reward -2)) ; child moving away
				)
	)

	(:action keep-away
		:parameters (?x - None)
		:precondition (not (solitary-play ?x))
		:effect (probabilistic 0.7 (and (solitary-play ?x) (child-moving-toward ?x) (not (child-stationary ?x)) (increase reward 2)) ; SP child moving toward
							   0.15 (and (social-interaction ?x) (not (child-moving-toward ?x)) (child-stationary ?x) (increase reward -2)) ; SI stationary
							   0.15 (and (direct-social-interaction ?x) (not (child-moving-toward ?x) (not (child-stationary ?x))) (increase reward -2)) ; DSI moving away
				)

	)

	(:action go-to-infant
		:parameters (?x - None)
		:precondition (solitary-play ?x)
		:effect (probabilistic 0.7 (and (direct-social-interaction ?x) (child-moving-toward ?x) (increase reward 2)) ; DSI child moving toward
							   0.15 (and (direct-social-interaction ?x) (not (social-interaction ?x)) (not (solitary-play ?x)) (child-stationary ?x) (increase reward -2)) ; DSI stationary
							   0.15 (and (not (direct-social-interaction ?x)) (not (social-interaction ?x)) (solitary-play ?x) (not (child-moving-toward ?x)) (not (child-stationary ?x)) (increase reward -2)) ; SP child moving away
				)

	)

)